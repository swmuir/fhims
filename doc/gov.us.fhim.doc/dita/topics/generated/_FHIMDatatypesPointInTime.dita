<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="FHIMDatatypesPointInTime" xml:lang="en-us">
<title id="title">PointInTime</title>
<shortdesc id="shortdesc">
</shortdesc>
<body id="body" >






<section id="description" audience="developer, modeler, sme">
  <title>Description</title>
	<p>A data type containing date/time information.  This data type is a placeholder, as various platforms have differing built-in date/time datatypes.  It is anticipated that this data type will be replaced by a different data type when transforming to a particular implementation platform.</p>

	<p>A quantity specifying a point on the axis of natural time. A point in time is most often represented as a calendar expression.  Semantically, however, time is independent from calendars and best described by its relationship to elapsed time (measured as a physical quantity in the dimension of time.) A point in time plus an elapsed time yields another point in time. Inversely, a point in time minus another point in time yields an elapsed time.  As nobody knows when time began, a point in time is conceptualized as the amount of time that has elapsed from some arbitrary zero-point, called an epoch. Because there is no absolute zero-point on the time axis natural time is a difference-scale quantity, where only differences are defined but no ratios. (For example, no point in time is - absolutely speaking - &apos;twice as late&apos; as another point in time.)  Given some arbitrary zero-point, one can express any point in time as an elapsed time measured from that offset. Such an arbitrary zero-point is called an epoch. This epoch-offset form is used as a semantic representation here, without implying that any system would have to implement the TS data type in that way. Systems that do not need to compute distances between points in time will not need any other representation than a calendar expression literal </p>


	
<simpletable>
 <sthead>
  <stentry>Content</stentry>
  <stentry>Description</stentry>
 </sthead>
 <strow>

  <stentry><p>literal :  String (1..1)</p> 


</stentry>
  <stentry><p>				&quot;TS literals are simple calendar expressions... [which] conform to the constrained ISO 8601... western calendar expressions  begin with the 4-digit year; followed by the 2-digit month of the year; followed by the 2-digit day of the month; followed  by the 2-digit hour of the day (beginning with zero); and so forth. For example, &apos;200004010315&apos; is a valid expression for  April 1, 2000, 3:15 am.  A calendar expression can be of variable precision, omitting parts from the right.  For example, &apos;20000401&apos; is precise  only to the day of the month.  The least defined calendar period (i.e. the second) may be written as a REAL, with the number of integer digits specified,  followed by the decimal point and any number of fractional digits. For example, &apos;20000401031520.34&apos; means April 1, 2000,  3:15 and 20.34 seconds.  When other calendars are used in the future, a prefix &apos;GREG:&apos; can be placed before the western (Gregorian) calendar  expression to disambiguate from other calendars. Each calendar shall have its own prefix. However, the western calendar is  the default if no prefix is present.  In the modern Gregorian calendar (and all calendars where time of day is based on UTC), the calendar expression may contain  a time zone suffix. The time zone suffix begins with a plus (+) or minus (-) followed by digits for the hour and, for non  UTC times, minute cycles. UTC is designated as offset &apos;+00&apos; or &apos;-00&apos;; the ISO 8601 and ISO 8824 suffix &apos;Z&apos; for UTC is not  permitted.&quot; - HL7 V3
				For the default Gregorian calendar the calendar expression literals of this specification conform to the constrained ISO 8601 that is defined in ISO 8824 (ASN.1) under clause 32 (generalized time) and to the HL7 version 2 TS data format.
			</p>
  </stentry>
  </strow>


</simpletable>

</section>




</body>
</topic>
